# Module Template YAML v1.0
# Purpose: Structured definition for any COS module

module:
  module_name: template_module
  description: >
    Concise description of the module's purpose and core functions.

  # Soul Alignment
  alignment:
    mantra: >
      "Module-specific mantra that captures its essence and purpose."
    principles:
      - clarity_over_complexity
      - service_over_utility
      # Other relevant principles
    resonance_questions:
      - "How does this module reduce friction for Kevin's creative process?"
      - "Will this module remain relevant 100 books from now?"

  # Technical Structure
  components:
    - name: main
      file: template_module_main.py
      purpose: "FastAPI app initialization and configuration"

    - name: router
      file: router.py
      purpose: "API endpoint definitions"

    - name: schemas
      file: schemas.py
      purpose: "Pydantic models for data validation"

    - name: services
      file: services.py
      purpose: "Core business logic"

    - name: models
      file: models.py
      purpose: "SQLAlchemy database models"

    - name: deps
      file: deps.py
      purpose: "FastAPI dependencies"

    - name: crud
      file: crud.py
      purpose: "Database operations"

  # Database Schema
  database:
    schema: template_module
    tables:
      - name: primary_records
        description: "Main entity for this module"
        fields:
          - name: id
            type: UUID
            constraints: "PRIMARY KEY"
          - name: created_at
            type: TIMESTAMP
            constraints: "NOT NULL DEFAULT now()"
          # Additional fields

  # Processing Pipeline
  pipeline:
    - step: 1
      name: "Input Validation"
      description: "Validate incoming data"
      components: ["schemas", "router"]

    - step: 2
      name: "Business Logic"
      description: "Process validated data"
      components: ["services"]

    - step: 3
      name: "Persistence"
      description: "Store processed data"
      components: ["crud", "models"]

  # Integration Points
  integrations:
    - module: cc
      purpose: "Configuration and logging"
      method: "Direct import from common"

    - module: other_module
      purpose: "Data exchange"
      method: "API calls"
      endpoints:
        - "/other_module/resource"

  # Future Expansions
  future_expansions:
    - name: "Feature A"
      description: "Detailed description of planned feature"
      priority: "High"

    - name: "Feature B"
      description: "Another planned feature"
      priority: "Medium"
