services:
  neo4j:
    restart: always
    image: neo4j:2025.05.1 # Community Edition with latest stable version
    container_name: cos_neo4j
    environment:
      NEO4J_AUTH: ${NEO4J_USER}/${NEO4J_PASSWORD}
      # Adjust Neo4j memory based on container limits
      # For MacBook Air M4: 1G pagecache + 1G heap = 2G total (within 3G container)
      # For Mac Studio M4 Max: 2G pagecache + 2G heap = 4G total (within 6G container)
      NEO4J_dbms_memory_pagecache_size: 1G
      NEO4J_dbms_memory_heap_initial__size: 1G
      NEO4J_dbms_memory_heap_max__size: 1G
    ports:
      - "7474:7474"
      - "7687:7687"
    volumes:
      - type: bind
        source: ${COS_NEO4J_ROOT}
        target: /data
      - type: bind
        source: ${COS_NEO4J_ROOT}_logs
        target: /logs
      - type: bind
        source: ${COS_NEO4J_ROOT}_transactions
        target: /var/lib/neo4j/transactions
    # Resource limits - Neo4j is memory-intensive for graph operations
    # For MacBook Air M4 (24GB): 2G typical, 3G max
    # For Mac Studio M4 Max (128GB): 4G typical, 6G max
    deploy:
      resources:
        limits:
          cpus: "4"      # Max 4 CPU cores for graph operations
          memory: 3G     # Hard limit: 3GB for MacBook Air (includes heap + pagecache + overhead)
        reservations:
          cpus: "2"      # Reserve 2 CPU cores
          memory: 2G     # Reserve 2GB RAM (soft limit)
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.neo4j.rule=Host(`neo4j.cos.local`)"
      - "traefik.http.routers.neo4j.entrypoints=web"
      - "traefik.http.services.neo4j.loadbalancer.server.port=7474"
    logging:
      driver: "json-file"
      options:
        max-size: "20m"
        max-file: "7"
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:7474 || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 30s
    networks:
      - cos_network

networks:
  cos_network:
    external: true
    name: cos_network

# Note: mem0g service removed - will be implemented in Phase 2 with actual Mem0 architecture
# This keeps Neo4j running for L2 graph layer development while avoiding placeholder failures
